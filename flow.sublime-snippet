<snippet>
	<content><![CDATA[
int n;
vector<vector<int>> cap;
vector<int> g[N];

int bfs(int s, int t, vector<int> &par){
	fill(all(par), -1);
	par[s] = 0;
	queue<pair<int,int>> q;
	q.push({s, INF});
	while(q.size()){
		int cur = q.front().first;
		int flow = q.front().second;
		q.pop();
		for(auto j : g[cur]){
			if(par[j] == -1 and cap[j][cur]){
				par[j] = cur;
				int new_flow = min(flow, cap[j][cur]);
				if(j == t) return new_flow;
				q.push({j, new_flow});
			}
		}
	}
	return 0;
}

int maxflow(int s, int t){
	cap.assign(n, vector<int>(n,0));
	// Assign Capacities to the edges

	int flow = 0;
	vector<int> parent(n+1);
	while(1){
		int new_flow = bfs(s, t, parent);
		if(new_flow == 0) break;
		int cur = t;
		flow += new_flow;
		while(cur != s){
			int prev = parent[cur];
			cap[prev][cur] += new_flow;
			cap[cur][prev] -= new_flow;
			cur = prev;
		}
	}
	return flow;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Edmonds-Karp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
